#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Django —Å–µ—Ä–≤–µ—Ä–∞ –∏ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫.
"""
import os
import sys
import django
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
BASE_DIR = Path(__file__).resolve().parent
sys.path.append(str(BASE_DIR))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'vl09_web.settings')

def test_django_startup():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–ø—É—Å–∫ Django."""
    print("=== –¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ Django ===")
    
    try:
        django.setup()
        print("‚úì Django —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        from django.conf import settings
        print(f"‚úì DEBUG: {settings.DEBUG}")
        print(f"‚úì ALLOWED_HOSTS: {settings.ALLOWED_HOSTS}")
        print(f"‚úì ERROR_LOG_FILE: {getattr(settings, 'ERROR_LOG_FILE', '–ù–ï –ù–ê–ô–î–ï–ù')}")
        
        return True
        
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Django: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_logging_configuration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("\n=== –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è ===")
    
    try:
        from django.conf import settings
        import logging
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        logging_config = getattr(settings, 'LOGGING', {})
        
        if 'handlers' in logging_config:
            print("‚úì Handlers –Ω–∞–π–¥–µ–Ω—ã")
            if 'error_file' in logging_config['handlers']:
                print("‚úì error_file handler –Ω–∞–π–¥–µ–Ω")
            else:
                print("‚úó error_file handler –Ω–µ –Ω–∞–π–¥–µ–Ω")
        else:
            print("‚úó Handlers –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
        if 'loggers' in logging_config:
            print("‚úì Loggers –Ω–∞–π–¥–µ–Ω—ã")
            if 'django.request' in logging_config['loggers']:
                print("‚úì django.request logger –Ω–∞–π–¥–µ–Ω")
            else:
                print("‚úó django.request logger –Ω–µ –Ω–∞–π–¥–µ–Ω")
        else:
            print("‚úó Loggers –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
        return True
        
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def test_error_logging():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫."""
    print("\n=== –¢–µ—Å—Ç –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫ ===")
    
    try:
        import logging
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –ª–æ–≥–≥–µ—Ä—ã
        loggers_to_test = [
            'django.request',
            'django.server',
            'vl09_web',
        ]
        
        for logger_name in loggers_to_test:
            logger = logging.getLogger(logger_name)
            logger.error(f"–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {logger_name}", extra={
                'test': True,
                'logger': logger_name
            })
            print(f"‚úì –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ {logger_name}")
            
        return True
        
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_file_creation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –ª–æ–≥–æ–≤."""
    print("\n=== –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –ª–æ–≥–æ–≤ ===")
    
    try:
        from django.conf import settings
        error_log_file = getattr(settings, 'ERROR_LOG_FILE', None)
        
        if not error_log_file:
            print("‚úó ERROR_LOG_FILE –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return False
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if os.path.exists(error_log_file):
            print(f"‚úì –§–∞–π–ª –ª–æ–≥–æ–≤ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {error_log_file}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            size = os.path.getsize(error_log_file)
            print(f"‚úì –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size} –±–∞–π—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å
            if os.access(error_log_file, os.W_OK):
                print("‚úì –ü—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å: OK")
            else:
                print("‚úó –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å")
                return False
                
        else:
            print(f"‚úó –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: {error_log_file}")
            return False
            
        return True
        
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Django —Å–µ—Ä–≤–µ—Ä–∞ –∏ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –ó–∞–ø—É—Å–∫ Django
    django_ok = test_django_startup()
    
    # –¢–µ—Å—Ç 2: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    config_ok = test_logging_configuration()
    
    # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –ª–æ–≥–æ–≤
    file_ok = test_file_creation()
    
    # –¢–µ—Å—Ç 4: –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
    logging_ok = test_error_logging()
    
    print("\n" + "=" * 60)
    print("–†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"Django –∑–∞–ø—É—Å–∫: {'‚úì OK' if django_ok else '‚úó FAIL'}")
    print(f"–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è: {'‚úì OK' if config_ok else '‚úó FAIL'}")
    print(f"–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –ª–æ–≥–æ–≤: {'‚úì OK' if file_ok else '‚úó FAIL'}")
    print(f"–õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫: {'‚úì OK' if logging_ok else '‚úó FAIL'}")
    
    if all([django_ok, config_ok, file_ok, logging_ok]):
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("Django —Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É –Ω–∞ Ubuntu.")
        return 0
    else:
        print("\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã.")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ –∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –Ω–∞ Ubuntu.")
        return 1

if __name__ == '__main__':
    sys.exit(main())

