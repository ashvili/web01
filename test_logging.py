#!/usr/bin/env python
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫.
–ü–æ–º–æ–≥–∞–µ—Ç –≤—ã—è–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –Ω–∞ Ubuntu.
"""
import os
import sys
import django
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
BASE_DIR = Path(__file__).resolve().parent
sys.path.append(str(BASE_DIR))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'vl09_web.settings')

def test_logging_setup():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("=== –¢–µ—Å—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è ===")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Django
        django.setup()
        print("‚úì Django —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        from django.conf import settings
        
        print(f"‚úì ERROR_LOG_FILE: {getattr(settings, 'ERROR_LOG_FILE', '–ù–ï –ù–ê–ô–î–ï–ù')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –ª–æ–≥–æ–≤ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        error_log_file = getattr(settings, 'ERROR_LOG_FILE', None)
        if error_log_file and os.path.exists(error_log_file):
            print(f"‚úì –§–∞–π–ª –ª–æ–≥–æ–≤ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {error_log_file}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å
            try:
                with open(error_log_file, 'a', encoding='utf-8') as f:
                    f.write("Test write access\n")
                print("‚úì –ü—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª –ª–æ–≥–æ–≤: OK")
            except Exception as e:
                print(f"‚úó –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª –ª–æ–≥–æ–≤: {e}")
        else:
            print(f"‚úó –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: {error_log_file}")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        logging_config = getattr(settings, 'LOGGING', {})
        if 'handlers' in logging_config and 'error_file' in logging_config['handlers']:
            print("‚úì –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è error_file handler –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("‚úó –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è error_file handler –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
        return True
        
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Django: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_error_logging():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫."""
    print("\n=== –¢–µ—Å—Ç –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫ ===")
    
    try:
        import logging
        
        # –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–≥–µ—Ä –¥–ª—è –æ—à–∏–±–æ–∫
        error_logger = logging.getLogger('django.request')
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        error_logger.error("–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ", extra={
            'test': True,
            'test_module': 'test_logging'
        })
        print("‚úì –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∑–∞–ø–∏—Å–∞–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∞–ª–æ—Å—å –≤ —Ñ–∞–π–ª
        from django.conf import settings
        error_log_file = getattr(settings, 'ERROR_LOG_FILE', None)
        
        if error_log_file and os.path.exists(error_log_file):
            # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏
            encodings = ['utf-8', 'cp1251', 'latin-1', 'utf-16']
            content = None
            
            for encoding in encodings:
                try:
                    with open(error_log_file, 'r', encoding=encoding) as f:
                        content = f.read()
                    print(f"‚úì –§–∞–π–ª –ø—Ä–æ—á–∏—Ç–∞–Ω —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π: {encoding}")
                    break
                except UnicodeDecodeError:
                    continue
                    
            if content is None:
                print("‚úó –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª –Ω–∏ —Å –æ–¥–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π")
                return False
                
            if "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ" in content:
                print("‚úì –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Ñ–∞–π–ª–µ –ª–æ–≥–æ–≤")
            else:
                print("‚úó –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Ñ–∞–π–ª–µ –ª–æ–≥–æ–≤")
                print(f"–ü–æ—Å–ª–µ–¥–Ω–∏–µ 300 —Å–∏–º–≤–æ–ª–æ–≤ —Ñ–∞–π–ª–∞:")
                print(content[-300:])
        
        return True
        
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_permissions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º."""
    print("\n=== –¢–µ—Å—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ ===")
    
    try:
        from django.conf import settings
        error_log_file = getattr(settings, 'ERROR_LOG_FILE', None)
        
        if not error_log_file:
            print("‚úó ERROR_LOG_FILE –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return False
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        log_dir = os.path.dirname(error_log_file)
        if not os.path.exists(log_dir):
            print(f"‚úó –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {log_dir}")
            return False
            
        print(f"‚úì –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {log_dir}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        test_file = os.path.join(log_dir, 'test_permissions.tmp')
        try:
            with open(test_file, 'w', encoding='utf-8') as f:
                f.write("test")
            os.remove(test_file)
            print("‚úì –ü—Ä–∞–≤–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: OK")
        except Exception as e:
            print(f"‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
            return False
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª –ª–æ–≥–æ–≤
        try:
            with open(error_log_file, 'a', encoding='utf-8') as f:
                f.write(f"Permission test at {os.getcwd()}\n")
            print("‚úì –ü—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª –ª–æ–≥–æ–≤: OK")
        except Exception as e:
            print(f"‚úó –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª –ª–æ–≥–æ–≤: {e}")
            return False
            
        return True
        
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—Ä–∞–≤: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    setup_ok = test_logging_setup()
    
    # –¢–µ—Å—Ç 2: –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    permissions_ok = test_permissions()
    
    # –¢–µ—Å—Ç 3: –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
    logging_ok = test_error_logging()
    
    print("\n" + "=" * 50)
    print("–†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è: {'‚úì OK' if setup_ok else '‚úó FAIL'}")
    print(f"–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞: {'‚úì OK' if permissions_ok else '‚úó FAIL'}")
    print(f"–õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫: {'‚úì OK' if logging_ok else '‚úó FAIL'}")
    
    if all([setup_ok, permissions_ok, logging_ok]):
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        return 0
    else:
        print("\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")
        return 1

if __name__ == '__main__':
    sys.exit(main())
